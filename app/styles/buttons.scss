$button-border-radius: $border-radius;
$button-text-weight: 600;
$button-disabled-color: rgba(desaturate(darken($button-color,4%),11%),1);

$button-height: 40px;
$button-big-height: 48px;
$button-big-mobile-height: 44px;
$button-small-height: 33px;

/**
 * Override bootstrap css buttons
 */
/**
 * :hover must include non-hover properties for touch devices where hover state 'sticks'
 */

$border: none;

.btn,
.btn:hover {
  color: #FFF;
  background-color: $button-color;
  display: inline-block;
  cursor: pointer;
  box-sizing: border-box;
  // So that the focus border doesn't mess with button sizing, have a border the same color as the button
  border: $border;
  height:$button-height;
  font-weight: $button-text-weight;
  //text-transform: uppercase;
  //
  vertical-align: top;

  font-size: 15px;
  @media #{$mobile} {
    font-size: 14px;
  }
}

// Must not apply some styles to :hover
// Otherwise it breaks for example, transitions on any buttons while hovering
.btn {
  border-radius: $button-border-radius;
  padding: 0 15px 4px;
  
  @include unselectable;
  @include focus-button;

  &.hover {
    color: #FFF;
    background-color: hoverColor($button-color);
    border: $border;
    border-color: hoverColor($button-color);
    cursor: pointer;
  }

  &.press {
    background-color: pressColor($button-color);
    border-color: pressColor($button-color);
    transform: translateY(1px);
    box-shadow: $button-inset-shadow;
    &:disabled {
      transform: none;
      box-shadow: none;
    }
    &.btn-on-dark {
      box-shadow: $button-inset-shadow-on-dark;
    }
  }

  &:focus {
    color: #FFF;
  }

  &:active {
    background-color: pressColor($button-color);
    border-color: pressColor($button-color);
    transform: translateY(1px);
    box-shadow: $button-inset-shadow;
    outline: none !important;
    &:focus {
      // When clicking general buttons we don't want the focus to appear briefly
      // For some reason when mouse is down on a button, focus is applied
      //box-shadow: $button-inset-shadow, $form-focus-glow-shadow !important;
      box-shadow: none !important;
    }
    &:disabled {
      transform: none;
      box-shadow: none;
    }
  }
  
  &.btn-on-dark:active {
    box-shadow: $button-inset-shadow-on-dark;
    &:focus {
      box-shadow: $button-inset-shadow-on-dark, $form-focus-glow-shadow-on-dark !important;
    }
  }
  
  &:disabled{
    //background-color:rgba($button-color,0.7);
    background-color: $button-disabled-color;
    border-color: $button-disabled-color;
    opacity:1;
    color: saturate(lighten($button-disabled-color,22%),11%);
    cursor: default !important;
    //cursor: not-allowed;
    
    &.disabled-cursor {
      cursor: not-allowed !important;
    }
  }
  
  &.disabled {
    cursor: default;
    //cursor: not-allowed;
  }
  
  &.loading {
    cursor: wait;
  }
  
  &.no-focus {
    @include no-focus;
  }
  
  &.btn-right-gap {
    margin-right:7px;
    @media #{$mobile-wide-and-up} {
      margin-right:8px;
    }
  }
  
  &.btn-icon-at-start {
    i {
      margin-left: -5px !important;
    }
  }

  &.btn-appear {
    
    background-color: transparent;
    color: $button-color;
    transition: background-color 0.333s;
    
    &.hover, &.press {
      transition: background-color 0.111s;
      background-color: rgba(saturate($bg-light-darker,22%),0.22);
    }
    
    position:relative;
    $duration: 0.333s;
    
    &:before {
      position: absolute;
      top: 0%;
      left: 0%;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      transform-origin: center;
      transform: scale3d(0,0,1);
      background-color: rgba($button-color,0.5);
      content: "";
      opacity: 1;
    }
    
    &.pressed {
      &:before {
        transition: transform $duration ease(out-expo), opacity #{$duration + 0.222s} ease(in-quad);
        transform: scale3d(1,1,1);
        opacity: 0;
      }
    }
    
    &:disabled{
      color: desaturate(darken($button-disabled-color,22%),22%);
      color: rgba($button-disabled-color,0.22);
      cursor: default !important;
      //cursor: not-allowed;
      
      &.disabled-cursor {
        cursor: not-allowed !important;
      }
    }
    
  }
}

form .btn {
  
  /**
   * By default buttons have no focus properties so that they don't 'flash' just from clicking them, however buttons in forms should have a focusable state
   */
  
  @include form-focus-button;
  
}

.btn-circle {
  
  height:$button-height;
  width: $button-height;
  border-radius: 50%;
  text-align: center;
  padding: 0;
  line-height: $button-height - 12px;
  
  i {
    @extend .icon-vcenter;
    margin-bottom: 5px;
  }
  
}

.btn-small,
.btn-small:hover {
  padding: 5px 11px 1px;
  height:$button-small-height;

  font-size: 14px;
  @media #{$mobile} {
    font-size: 13px;
  }

  @media #{$mobile} {
    //font-size: 4.8vmin;
    padding: 5px 11px;
  }
  &.hover,&.press {
    //font-size: 19px;
    //height:48px;
    @media #{$mobile} {
      //font-size: 4.4vmin;
    }
  }
  
  &.btn-right-gap {
    margin-right:4px;
    @media #{$mobile-wide-and-up} {
      margin-right:5px;
    }
  }
}

.btn-inline {
  display: inline-block;
}

/**
 * Should match height of blackout-select
 */
.btn-med,
.btn-med:hover {
  font-size: 17px;
  text-shadow: 0 1px 1px rgba(black,0.111);
  height:$button-height;
  padding: 0 0 2px;

  @media #{$mobile} {
    font-size: 15px;
    height:$button-height;
  }
}

.btn-big,
.btn-big:hover {
  padding: 0 20px 2px;
  text-shadow: 0 1px 1px rgba(black,0.111);
  height:$button-big-height;

  font-size: 17px;
  @media #{$mobile} {
    font-size: 15px;
    height:$button-big-mobile-height;
  }
  
  @media #{$mobile-tall} {
    padding: 0 4vw 2px;
  }
  &.hover,&.press {
    //font-size: 19px;
    //height:48px;
    @media #{$mobile} {
      //font-size: 4.4vmin;
    }
  }
  
  &.btn-right-gap {
    margin-right:11px;
    @media #{$mobile-wide-and-up} {
      margin-right:15px;
    }
  }
}

/**
 * For big independent buttons in situations like the home page
 */
.btn-fat, .btn-fat:hover {
  padding: 0 0 2px;
  font-size: 20px;
  height:$button-big-height;
  text-shadow: 0 1px 1px rgba(black,0.111);

  @media #{$mobile} {
    //font-size: 4.8vmin;
    padding: 0 0 0.5vmin;
  }
  &.hover,&.press {
    //font-size: 19px;
    //height:48px;
    @media #{$mobile} {
      //font-size: 4.4vmin;
    }
  }
}

.btn-ghost,
.btn-ghost:hover {
  background-color: transparent;
  border: 1px solid $form-border-color;
  color: $primary-text-color;
  box-sizing: border-box;
  border-radius: $border-radius;
  text-shadow: none;
  
  @include focus-button-ghost;
  
  &.btn-small {
    border: 1px solid $button-color;
  }
  
  &.white,&.white:hover {
    border-color: rgba(white,0.777);
    color: rgba(white,0.777);
    
    &.hover,&.press,&:active {
      border: 1px solid $button-color;
      background-color: $button-color;
      color: #FFF;
    }
    
    &.fill-white {
      &.hover,&.press,&:active {
        border: 1px solid white;
        background-color: white;
        color: $button-color;
      }
    }
  }
  
  // Just feels too darn slow
  //transition: background-color 0.222s, color 0.222s, border-color 0.222s;
  
  &.hover,&.press,&:active {
    //background-color: $button-color;
    //color: #FFF;
    background-color: transparent;
    color: $focus-border-color;
    color: $button-color;
    border: 1px solid $form-border-color;
  }
  
  &:disabled{
    background-color: transparent;
    border: 1px solid $form-border-color;
    opacity:1;
    cursor: default;
    color: rgba($primary-text-color,0.5);
  }
  
  &.on-image {
    background-color: rgba($bg-dark,0.444);
  }
    
  &.press {
    transition: none;
  }
}

form .btn-ghost {
  @include form-focus-button-ghost;
}

.no-outline {
  &:focus, &:active {
    outline: none !important;
  }
}

.btn-caps {
  text-transform: uppercase;
}

$fb-button-color: hsl(225,55%,50%);
.btn-fb,
.btn-fb:hover {
  background-color: $fb-button-color;
  //@include retina-img-overlay("/assets/images/social/fb.png", "/assets/images/social/fb-2x.png", scaleDimensions(26, 50, 0.7), 4% center);
  position:relative;
  // So that the focus border doesn't mess with button sizing, have a border the same color as the button
  border: none;

  @media #{$mobile} {
    background-size: scale-vmin(26, 50, 3.3);
    background-position: 5% center;
  }

  @media #{$tablet} {
    background-size: scaleDimensions(26, 50, 0.7);
  }
  
  &:active {
    background-color: $fb-button-color;
    border-color: $fb-button-color;
  }

  &.hover {
    color: #FFF;
    background-color: hoverColor($fb-button-color);
    border-color: hoverColor($fb-button-color);
  }

  &.press {
    color: #FFF;
    background-color: pressColor($fb-button-color);
    border-color: pressColor($fb-button-color);
  }
  
  &:disabled{
    $color: rgba(desaturate(darken($fb-button-color,11%),11%),1);
    background-color:$color;
    border-color:$color;
    opacity:1;
    cursor: default;
  }
  @include focus-button-fb;
}

form .btn-fb {
  @include form-focus-button-fb;
}

.btn-alt,
.btn-alt:hover {
  background-color: $alt-button-color;
  border-color: $alt-button-color;

  &.hover {
    color: #FFF;
    background-color: hoverColor($alt-button-color);
    border-color: hoverColor($alt-button-color);
  }
  &.press {
    color: #FFF;
    background-color: pressColor($alt-button-color);
    border-color: pressColor($alt-button-color);
  }
}

.btn-red, .btn-red:hover {
  $red-color: $error-color;
  $red-disabled-color: rgba(desaturate(darken($red-color,4%),22%),1);
  background-color: $red-color;

  &.hover {
    background-color: hoverColor($red-color);
    border-color: hoverColor($red-color);
  }

  &.press {
    background-color: pressColor($red-color);
    border-color: pressColor($red-color);
  }

  &:active {
    background-color: pressColor($red-color);
    border-color: pressColor($red-color);
  }
  
  &:disabled{
    background-color: $red-disabled-color;
    border-color: $red-disabled-color;
    color: saturate(lighten($red-disabled-color,22%),11%);
    cursor: not-allowed;
  }
  
}

.btn-dark, .btn-dark:hover {
  $color: $bg-dark-lighter-2x;
  $disabled-color: rgba(desaturate(darken($color,7%),7%),1);
  background-color: $color;
  
  //$text-color: $secondary-on-dark-lighter-3x;
  $text-color: white;
  color: $text-color;

  &.hover {
    background-color: hoverColor($color,true,true);
    border-color: hoverColor($color,true,true);
    color: $text-color;
  }

  &.press {
    background-color: pressColor($color);
    border-color: pressColor($color);
  }

  &:active {
    background-color: pressColor($color);
    border-color: pressColor($color);
  }
  
  &:disabled{
    background-color: $disabled-color;
    border-color: $disabled-color;
    color: saturate(lighten($disabled-color,22%),0%);
    cursor: not-allowed;
  }
  
  .spinner.bars > div {
    background-color: saturate(lighten($color,11%),8%);
  }
  
}